var S=Object.defineProperty;var T=(o,t,e)=>t in o?S(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var c=(o,t,e)=>(T(o,typeof t!="symbol"?t+"":t,e),e),y=(o,t,e)=>{if(!t.has(o))throw TypeError("Cannot "+e)};var m=(o,t,e)=>(y(o,t,"read from private field"),e?e.call(o):t.get(o)),f=(o,t,e)=>{if(t.has(o))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(o):t.set(o,e)},n=(o,t,e,i)=>(y(o,t,"write to private field"),i?i.call(o,e):t.set(o,e),e);const b=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const u of r.addedNodes)u.tagName==="LINK"&&u.rel==="modulepreload"&&i(u)}).observe(document,{childList:!0,subtree:!0});function e(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerpolicy&&(r.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?r.credentials="include":s.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(s){if(s.ep)return;s.ep=!0;const r=e(s);fetch(s.href,r)}};b();var l,a,h,d;class C{constructor(t=14,e=0,i=0,s=0){f(this,l,0);f(this,a,0);f(this,h,0);f(this,d,0);c(this,"tickIntervalID");c(this,"secondsEl",document.querySelector('[data-timer="seconds"]'));c(this,"minutesEl",document.querySelector('[data-timer="minutes"]'));c(this,"hoursEl",document.querySelector('[data-timer="hours"]'));c(this,"daysEl",document.querySelector('[data-timer="days"]'));c(this,"countdownTimeEl",document.querySelector('[data-timer="countdown-time"]'));n(this,l,s),n(this,a,i),n(this,h,e),n(this,d,t)}get seconds(){return this.numberToFormatedString(m(this,l))}set seconds(t){n(this,l,t)}get minutes(){return this.numberToFormatedString(m(this,a))}set minutes(t){n(this,a,t)}get hours(){return this.numberToFormatedString(m(this,h))}set hours(t){n(this,h,t)}get days(){return this.numberToFormatedString(m(this,d))}set days(t){n(this,d,t)}numberToFormatedString(t){return t.toLocaleString(void 0,{minimumIntegerDigits:2,useGrouping:!1})}flipCard(t,e){const i=t.querySelector("#flip-fill-top"),s=t.querySelector("#flip-back"),r=t.querySelector("#flip-card-inner"),u=t.querySelector("#flip-front"),g=t.querySelector("#flip-bottom");i.textContent=e,s.textContent=e,r.style.opacity="1",r.classList.toggle("flip"),setTimeout(()=>{r.style.opacity="0",r.classList.toggle("flip"),u.textContent=e,g.textContent=e},400)}tick(){this.days==0&&this.hours==0&&this.minutes==0&&this.seconds==0?this.stop():(this.seconds--,this.updateTime("seconds"),this.showCurrentTime())}updateTime(t){switch(t){case"seconds":this.seconds<0&&(this.seconds=59,this.minutes--,this.updateTime("minutes")),this.flipCard(this.secondsEl,this.seconds);break;case"minutes":this.minutes<0&&(this.minutes=59,this.hours--,this.updateTime("hours")),this.flipCard(this.minutesEl,this.minutes);break;case"hours":this.hours<0&&(this.hours=59,this.days--,this.updateTime("days")),this.flipCard(this.hoursEl,this.hours);break;case"days":this.days>=0&&this.flipCard(this.daysEl,this.days);break}}setFlipCardValues(){["days","hours","minutes","seconds"].forEach(e=>{const i=document.querySelector(`[data-timer="${e}"]`);i.querySelector("#flip-front").textContent=this[e],i.querySelector("#flip-bottom").textContent=this[e]})}start(){this.setFlipCardValues(),this.tickIntervalID=setInterval(()=>this.tick(),1e3)}stop(){clearInterval(this.tickIntervalID)}showCurrentTime(){this.countdownTimeEl.querySelector("#days").textContent="days "+this.days,this.countdownTimeEl.querySelector("#hours").textContent="hours "+this.hours,this.countdownTimeEl.querySelector("#minutes").textContent="minutes "+this.minutes,this.countdownTimeEl.querySelector("#seconds").textContent="seconds "+this.seconds}countToTimeDate(t){let e=Math.abs(t-new Date)/1e3;const i=Math.floor(e/86400);e-=i*86400;const s=Math.floor(e/3600)%24;e-=s*3600;const r=Math.floor(e/60)%60;e-=r*60;const u=Math.floor(e%60);this.days=i,this.hours=s,this.minutes=r,this.seconds=u}}l=new WeakMap,a=new WeakMap,h=new WeakMap,d=new WeakMap;const p=new C;p.countToTimeDate(new Date("2022-08-15"));p.start();
